#####
# CI needs access to mx-header repository. Ensure shippable deployment key is registered with the project
# We use a stock image from shippable to avoid pulling a custom build image from ECR every time.
####

language: node_js

node_js:
  - 9.11.1

env:
  global:
    - IMAGE_NAME=mcp/moc-web
    - IMAGE_REPO_URL=693532776274.dkr.ecr.us-east-1.amazonaws.com/mcp/moc-web
    - SHIPPABLE_TEST_RESULTS_DIR=shippable/testresults

branches:
  only:
    - develop
    - master

cache: true

cache_dir_list:
  - $SHIPPABLE_BUILD_DIR/node_modules

build:
  #commands in this section run inside your CI container. In addition, any commands such as ls, in this section can be used to skip default processing for CI.
  ci:
    # Shippable test & code coverage folders
    - mkdir -p $SHIPPABLE_TEST_RESULTS_DIR
    # Since caching is enabled, cleanup git leftovers
    - git clean -f -x

    # install NPM depedencies
    - cd $SHIPPABLE_BUILD_DIR
    - shippable_retry npm install --quiet

    #Run the test
    - npm run test --coverage
    - cp $SHIPPABLE_BUILD_DIR/test-report.xml $SHIPPABLE_TEST_RESULTS_DIR/test-report.xml

    #Run the build for staging environment
    - cd $SHIPPABLE_BUILD_DIR
    - >
      if [ "$BRANCH" == "master" ]; then
        npm run ng build --configuration production --prod
      elif [ "$BRANCH" == "develop" ]; then
        npm run ng build --configuration staging
      fi

  on_success:
    # WEB IMAGE
    - >
      if [ "$BRANCH" == "master" ] || [ "$BRANCH" == "develop" ] && [ "$IS_PULL_REQUEST" == "false" ]; then
        docker build -f $SHIPPABLE_BUILD_DIR/docker/Dockerfile  -t $IMAGE_NAME $SHIPPABLE_BUILD_DIR
        docker tag $IMAGE_NAME:latest $IMAGE_REPO_URL:latest
        docker tag $IMAGE_NAME:latest $IMAGE_REPO_URL:$BRANCH.$BUILD_NUMBER
        docker push $IMAGE_REPO_URL:latest
        docker push $IMAGE_REPO_URL:$BRANCH.$BUILD_NUMBER

        if [ "$BRANCH" == "master" ]; then
          echo "versionName=$BRANCH.$BUILD_NUMBER" >> $JOB_STATE/mcp-web-img-production.env
        elif [ "$BRANCH" == "develop" ]; then
          echo "versionName=$BRANCH.$BUILD_NUMBER" >> $JOB_STATE/mcp-web-img-staging.env
        fi
      fi

integrations:
  notifications:
    - integrationName: moc-Slack-integration
      type: slack
      recipients:
        - "#moc-staging"
      branches:
        only:
          - develop
      on_success: change
      on_failure: always

    - integrationName: moc-Slack-integration
      type: slack
      recipients:
        - "#moc-production"
      branches:
        only:
          - master
      on_success: change
      on_failure: always
  hub:
    - integrationName: moc-AWS-integration
      type: amazonKeys
      region: us-east-1
